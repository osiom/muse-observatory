FROM python:3.11-alpine

# Install required system dependencies for building packages and venv
RUN apk add --no-cache \
    bash \
    tzdata \
    docker-cli \
    build-base \
    libffi-dev \
    openssl-dev \
    python3-dev \
    py3-cryptography \
    py3-pip \
    py3-setuptools \
    py3-wheel \
    busybox-suid

WORKDIR /app

# Create db_files directory with proper permissions
RUN mkdir -p /app/db_files && chmod -R 777 /app/db_files

ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Create a non-root user and group
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser

# Set permissions for /app and ensure db_files is writable
RUN chown -R appuser:appgroup /app && \
    chmod -R 755 /app && \
    chmod -R 777 /app/db_files

# Prepare system paths before switching user
RUN mkdir -p /etc/crontabs && chown appuser:appgroup /etc/crontabs
RUN mkdir /venv && chown appuser:appgroup /venv


# Create and prepare /etc/crontabs/root as root
RUN mkdir -p /etc/crontabs \
 && echo "1 0 * * * /venv/bin/python /app/generate_fact.py && docker restart muse-observatory-app" > /etc/crontabs/root \
 && chown appuser:appgroup /etc/crontabs/root

# Copy start-cron.sh and set permissions
COPY start-cron.sh /start-cron.sh
RUN chmod +x /start-cron.sh && chown appuser:appgroup /start-cron.sh

# Now switch to appuser for security
USER appuser

COPY requirements.txt .
# Create venv and install dependencies as non-root
RUN python3 -m venv /venv \
 && /venv/bin/pip install --upgrade pip \
 && /venv/bin/pip install -r requirements.txt

# Copy full app code after dependencies (avoids cache busting)
COPY . /app

ENV DB_DIR=/app/db_files
ENV OPENAI_API_KEY=${OPENAI_API_KEY}
ENV PYTHONPATH=/app

CMD ["/start-cron.sh"]
